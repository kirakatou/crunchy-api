{
    "swagger": "2.0",
    "info": {
        "title": "Crunchy API",
        "description": "This is a sample of Crunchy API",
        "contact": {
            "name": "SmallCorridor",
            "email": "smallcorridor@gmail.com"
        },
        "version": "1.0"
    },
    "host": "crunchy-api.dev",
    "basePath": "",
    "schemes": [
        "http"
    ],
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "login"
                ],
                "summary": "Authenticate User.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "You need to login first!",
                        "required": true,
                        "schema": {
                            "properties": {
                                "username": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User token.",
                        "schema": {
                            "property": "token",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "register"
                ],
                "summary": "Register new User.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Haven't an account? Register here!",
                        "required": true,
                        "schema": {
                            "properties": {
                                "username": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password"
                                },
                                "password_confirmation": {
                                    "type": "string",
                                    "format": "password"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "gender": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User token.",
                        "schema": {
                            "property": "token",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Retrieves the collection of Category resources.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/category"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Add new Category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Category object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "icon": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new Category has successfully added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/category"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Find Category by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the categoryId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/category"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Category not found."
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update the Category resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the categoryId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Category object that needs to be updated",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "icon": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category has been successfully updated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/category"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Category not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Remove the Category resource.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the categoryId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category resource deleted."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Category not found."
                    }
                }
            }
        },
        "/api/v1/food/coupon": {
<<<<<<< HEAD
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Retrieves the collection of Coupon resources.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupons collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coupon"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Add new Coupon.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Coupon object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "coupon_title": {
                                    "type": "string"
                                },
                                "point": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "amount": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new Coupon has successfully added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coupon"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/food/coupon/{id}": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Find Coupon by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the couponId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coupon"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Coupon not found."
                    }
                }
            },
            "put": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Update the Coupon resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the couponId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Coupon object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "coupon_title": {
                                    "type": "string"
                                },
                                "point": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "amount": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new Coupon has successfully updated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coupon"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Coupon not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Remove the Coupon resource.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the couponId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Coupon resource deleted."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Title not found."
                    }
                }
            }
        },
        "/api/v1/post": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Retrieves the collection of Post resources.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/post"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/addComment": {
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Add comment in posting image.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Comment that needs to be added into posting image",
                        "required": true,
                        "schema": {
                            "properties": {
                                "comment": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment has successfully added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/comment"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/comments": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Show all comments by Post's Id.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/comment"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Post ID not found."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/deleteComment/{commentId}": {
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Remove the comment from posting image.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Please enter the commentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Comment has been deleted."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Post ID or Comment ID not found."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/totalLikes": {
            "get": {
                "tags": [
                    "Like"
                ],
                "summary": "Show total likes by Post's Id.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/like"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Post ID not found."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/like": {
            "post": {
                "tags": [
                    "Like"
                ],
                "summary": "Like or Dislike a posting image.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/like"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/report": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "show the list of the report category for report.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportlist"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/report/{reportId}": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Report a posting image.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "Please enter the reportId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportlist"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/food/reportcategory": {
            "get": {
                "tags": [
                    "ReportCategory"
                ],
                "summary": "Retrieves the collection of Report Category resources.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Categories collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportcategory"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "ReportCategory"
                ],
                "summary": "Add new Report Category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Report Category object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new Report Category has successfully added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportcategory"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/food/reportcategory/{id}": {
            "get": {
                "tags": [
                    "ReportCategory"
                ],
                "summary": "Find Report Category by ID.",
=======
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Retrieves the collection of Coupon resources.",
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the reportcategoryId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
<<<<<<< HEAD
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportcategory"
=======
                        "description": "Coupons collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coupon"
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Report Category not found."
                    }
                }
            },
<<<<<<< HEAD
            "put": {
                "tags": [
                    "ReportCategory"
                ],
                "summary": "Update the Report Category resource.",
=======
            "post": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Add new Coupon.",
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
<<<<<<< HEAD
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the categoryreportId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Report Category object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
=======
                        "name": "body",
                        "in": "body",
                        "description": "Coupon object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "coupon_title": {
                                    "type": "string"
                                },
                                "point": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "description": {
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                                    "type": "string"
                                },
                                "amount": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
<<<<<<< HEAD
                        "description": "new Report Category has successfully updated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportcategory"
=======
                        "description": "new Coupon has successfully added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coupon"
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Report Category not found."
                    }
                }
<<<<<<< HEAD
            },
            "delete": {
                "tags": [
                    "ReportCategory"
                ],
                "summary": "Remove the Report Category resource.",
=======
            }
        },
        "/api/v1/food/coupon/{id}": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Find Coupon by ID.",
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
<<<<<<< HEAD
                        "description": "Please enter the reportcategoryId",
=======
                        "description": "Please enter the couponId",
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
<<<<<<< HEAD
                    "204": {
                        "description": "Report Category resource deleted."
=======
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coupon"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
<<<<<<< HEAD
                        "description": "Report Category not found."
                    }
                }
            }
        },
        "/api/v1/food/title": {
            "get": {
                "tags": [
                    "Title"
                ],
                "summary": "Retrieves the collection of Title resources.",
=======
                        "description": "Coupon not found."
                    }
                }
            },
            "put": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Update the Coupon resource.",
                "consumes": [
                    "application/json"
                ],
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Titles collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/title"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "Title"
                ],
                "summary": "Add new Title.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
<<<<<<< HEAD
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
=======
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the couponId",
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "body",
                        "in": "body",
<<<<<<< HEAD
                        "description": "Title object that needs to be added to the database",
=======
                        "description": "Coupon object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "coupon_title": {
                                    "type": "string"
                                },
                                "point": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "amount": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new Coupon has successfully updated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/coupon"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Coupon not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Remove the Coupon resource.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the couponId",
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                        "required": true,
                        "schema": {
                            "properties": {
                                "level": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
<<<<<<< HEAD
                    "200": {
                        "description": "new Title has successfully added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/title"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
=======
                    "204": {
                        "description": "Coupon resource deleted."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Title not found."
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                    }
                }
            }
        },
<<<<<<< HEAD
        "/api/v1/food/title/{id}": {
            "get": {
                "tags": [
                    "Title"
                ],
                "summary": "Find Title by ID.",
=======
        "/api/v1/merchant": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Retrieves the collection of Merchant resources.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merchants collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/merchant"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Add new Merchant.",
                "consumes": [
                    "application/json"
                ],
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
<<<<<<< HEAD
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the titleId",
=======
                        "name": "body",
                        "in": "body",
                        "description": "Category object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "phone_no": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new Merchant has successfully added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/merchant"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/merchant/{merchantId}": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Find Merchant by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "merchantId",
                        "in": "path",
                        "description": "Please enter the merchantId",
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "$ref": "#/definitions/title"
=======
                                "$ref": "#/definitions/merchant"
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Merchant not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Remove the Merchant resource.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "merchantId",
                        "in": "path",
                        "description": "Please enter the merchantId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Merchant resource deleted."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
<<<<<<< HEAD
                        "description": "Title not found."
                    }
                }
            },
            "put": {
                "tags": [
                    "Title"
                ],
                "summary": "Update the Title resource.",
=======
                        "description": "Merchant not found."
                    }
                }
            }
        },
        "/api/v1/merchant{merchantId}": {
            "put": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Update the Merchant resource.",
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
<<<<<<< HEAD
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the titleId",
=======
                        "name": "merchantId",
                        "in": "path",
                        "description": "Please enter the merchantId",
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
<<<<<<< HEAD
                        "description": "Title object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "level": {
                                    "type": "string"
                                },
                                "name": {
=======
                        "description": "Merchant object that needs to be updated",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                },
                                "phone_no": {
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                                    "type": "string"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
<<<<<<< HEAD
                        "description": "new Title has successfully updated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/title"
=======
                        "description": "Merchant has been successfully updated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/merchant"
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Title not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Title"
                ],
                "summary": "Remove the Title resource.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the titleId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Title resource deleted."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
<<<<<<< HEAD
=======
                        "description": "Merchant not found."
                    }
                }
            }
        },
        "/api/v1/post": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Retrieves the collection of Post resources.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/post"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/addComment": {
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Add comment in posting image.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Comment that needs to be added into posting image",
                        "required": true,
                        "schema": {
                            "properties": {
                                "comment": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment has successfully added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/comment"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/comments": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Show all comments by Post's Id.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/comment"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Post ID not found."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/deleteComment/{commentId}": {
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Remove the comment from posting image.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Please enter the commentId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Comment has been deleted."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Post ID or Comment ID not found."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/totalLikes": {
            "get": {
                "tags": [
                    "Like"
                ],
                "summary": "Show total likes by Post's Id.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/like"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Post ID not found."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/like": {
            "post": {
                "tags": [
                    "Like"
                ],
                "summary": "Like or Dislike a posting image.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/like"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Post ID not found."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/report": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "show the list of the report category for report.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportlist"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/post/{postId}/report/{reportId}": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Report a posting image.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Please enter the postId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "Please enter the reportId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportlist"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/{userId}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieves the collection of Profile resources.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Please enter the userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profiles collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/profile"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/{userId}/follow": {
            "post": {
                "tags": [
                    "User Follower"
                ],
                "summary": "Follow or Unfollow user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Please enter the userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user follower"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "User ID not found."
                    }
                }
            }
        },
        "/api/v1/{userId}/followers": {
            "get": {
                "tags": [
                    "User Follower"
                ],
                "summary": "Show total followers by User's Id.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Please enter the userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user follower"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "User ID not found."
                    }
                }
            }
        },
        "/api/v1/{userId}/following": {
            "get": {
                "tags": [
                    "User Follower"
                ],
                "summary": "Show total following by User's Id.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Please enter the userId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user follower"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "User ID not found."
                    }
                }
            }
        },
        "/api/v1/food/reportcategory": {
            "get": {
                "tags": [
                    "ReportCategory"
                ],
                "summary": "Retrieves the collection of Report Category resources.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Categories collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportcategory"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "ReportCategory"
                ],
                "summary": "Add new Report Category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Report Category object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new Report Category has successfully added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportcategory"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/food/reportcategory/{id}": {
            "get": {
                "tags": [
                    "ReportCategory"
                ],
                "summary": "Find Report Category by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the reportcategoryId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportcategory"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Report Category not found."
                    }
                }
            },
            "put": {
                "tags": [
                    "ReportCategory"
                ],
                "summary": "Update the Report Category resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the categoryreportId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Report Category object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new Report Category has successfully updated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/reportcategory"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Report Category not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "ReportCategory"
                ],
                "summary": "Remove the Report Category resource.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the reportcategoryId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Report Category resource deleted."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Report Category not found."
                    }
                }
            }
        },
        "/api/v1/food/title": {
            "get": {
                "tags": [
                    "Title"
                ],
                "summary": "Retrieves the collection of Title resources.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Titles collection.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/title"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            },
            "post": {
                "tags": [
                    "Title"
                ],
                "summary": "Add new Title.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Title object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "level": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new Title has successfully added.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/title"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action."
                    }
                }
            }
        },
        "/api/v1/food/title/{id}": {
            "get": {
                "tags": [
                    "Title"
                ],
                "summary": "Find Title by ID.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the titleId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is the data that you search.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/title"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Title not found."
                    }
                }
            },
            "put": {
                "tags": [
                    "Title"
                ],
                "summary": "Update the Title resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the titleId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Title object that needs to be added to the database",
                        "required": true,
                        "schema": {
                            "properties": {
                                "level": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "new Title has successfully updated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/title"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
                        "description": "Title not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Title"
                ],
                "summary": "Remove the Title resource.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Example = Bearer(space)'your_token'",
                        "required": true,
                        "type": "string",
                        "default": "Bearer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Please enter the titleId",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Title resource deleted."
                    },
                    "401": {
                        "description": "Unauthorized action."
                    },
                    "404": {
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
                        "description": "Title not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "Error": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "category": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "category": {
                    "type": "boolean",
                    "default": true
                },
                "create_at": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "comment": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "post_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "comment": {
                    "type": "string"
                },
                "create_at": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "coupon": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "coupon_title": {
                    "type": "string"
                },
                "point": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "text"
                },
                "amount": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "like": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "post_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "like": {
                    "type": "boolean"
                },
                "create_at": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "merchant": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "phone_no": {
                    "type": "string"
                },
                "create_at": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "post": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "merchant_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "path": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "taste": {
                    "type": "number",
                    "format": "double"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "service": {
                    "type": "number",
                    "format": "double"
                },
                "create_at": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
<<<<<<< HEAD
=======
        "profile": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "photo": {
                    "type": "string"
                },
                "max_exp": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "create_at": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
        "reportcategory": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "reportlist": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "post_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "report_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "title": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "level": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
<<<<<<< HEAD
=======
        },
        "user follower": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "follower_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "create_at": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
>>>>>>> 67833167ef5c361c2e9338d3649dcb37c2b9cf1e
        }
    }
}